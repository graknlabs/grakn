define

###################################################
####################Schema######################
#################################################

"vertex" sub entity
    has index;

"link-from" sub role;
"link-to" sub role;
"link" sub relationship, relates link-from, relates link-to;
vertex plays link-from, plays link-to;

"reach-from" sub role;
"reach-to" sub role;
"reachable" sub relationship, relates reach-from, relates reach-to;
vertex plays reach-from, plays reach-to;

"index" sub attribute, datatype string;

insert

####################################################
##################DATA#############################
####################################################

$a isa vertex, has index "a";
$b isa vertex, has index "b";
$c isa vertex, has index "c";
$d isa vertex, has index "d";

(link-from: $a, link-to: $b) isa link;
(link-from: $b, link-to: $c) isa link;
(link-from: $c, link-to: $c) isa link;
(link-from: $c, link-to: $d) isa link;

define

####################################################
##################RULES#############################
####################################################

rule-1 sub rule,
when {
(link-from: $x, link-to: $y) isa link;},
then {
(reach-from: $x, reach-to: $y) isa reachable;};

rule-2 sub rule,
when {
(link-from: $x, link-to: $z) isa link;
(reach-from: $z, reach-to: $y) isa reachable;},
then {
(reach-from: $x, reach-to: $y) isa reachable;};
