insert

###################################################
####################Ontology######################
#################################################

"vertex" sub entity
    has index;

"link-endA" sub role;
"link-endB" sub role;
"link" sub relationship, relates link-endA, relates link-endB;
vertex plays link-endA, plays link-endB;

"reach-endA" sub role;
"reach-endB" sub role;
"reachable" sub relationship, relates reach-endA, relates reach-endB;
vertex plays reach-endA, plays reach-endB;

"index" sub resource, datatype string;

####################################################
##################DATA#############################
####################################################

$a isa vertex, has index "a";
$b isa vertex, has index "b";
$c isa vertex, has index "c";
$d isa vertex, has index "d";

(link-endA: $a, link-endB: $b) isa link;
(link-endA: $b, link-endB: $c) isa link;
(link-endA: $c, link-endB: $c) isa link;
(link-endA: $c, link-endB: $d) isa link;

####################################################
##################RULES#############################
####################################################

isa inference-rule,
when {
($x, $y) isa link;},
then {
(reach-endA: $x, reach-endB: $y) isa reachable;};

isa inference-rule,
when {
(link-endA: $x, link-endB: $z) isa link;
(reach-endA: $z, reach-endB: $y) isa reachable;},
then {
(reach-endA: $x, reach-endB: $y) isa reachable;};