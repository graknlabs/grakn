version: 2.1
commands:
  bazel_install:
    steps:
      - run:
          name: Bazel - Install
          command: |
            curl -OL https://github.com/bazelbuild/bazel/releases/download/0.20.0/bazel-0.20.0-installer-linux-x86_64.sh
            chmod +x bazel-0.20.0-installer-linux-x86_64.sh
            sudo ./bazel-0.20.0-installer-linux-x86_64.sh

  bazel_add_rbe_credential:
    steps:
      - run:
          name: Bazel - Add RBE Credential
          command: |
            if [[ -n "$BAZEL_RBE_CREDENTIAL" ]]; then
              BAZEL_RBE_CREDENTIAL_LOCATION=~/.config/gcloud/application_default_credentials.json
              echo "An RBE credential is found and will be saved to $BAZEL_RBE_CREDENTIAL_LOCATION. Bazel will be executed with RBE support."
              mkdir -p ~/.config/gcloud/
              echo $BAZEL_RBE_CREDENTIAL > "$BAZEL_RBE_CREDENTIAL_LOCATION"
            else
              echo "No RBE credential found. Bazel will be executed locally without RBE support."
            fi

  bazel:
    parameters:
      command:
          type: string
    steps:
      - run:
          name: Bazel - Execute
          command: |
            if [[ -f ~/.config/gcloud/application_default_credentials.json ]]; then
              echo "Bazel will be executed with RBE support. This means the build is remotely executed and the cache will be re-used by subsequent CI jobs."
              CMD="<< parameters.command >> --config=rbe"
            else
              echo "Bazel will be executed locally (without RBE support)."
              CMD="<< parameters.command >>"
            fi
            echo "Executing $CMD"
            $CMD

  rpm_install:
    steps:
      - run:
          name: Install rpm (for rpmbuild)
          command: sudo apt update && sudo apt install rpm -y

jobs:
  build:
    machine: true
    working_directory: ~/grakn
    steps:
      - checkout
      - bazel_install
      - bazel_add_rbe_credential
      - run: python ./dependencies/tools/checkstyle/test-coverage.py
      - rpm_install
      - bazel:
          command: bazel build //...
      - run: mkdir dist/ && mv bazel-genfiles/grakn-core-all.zip dist/
      - persist_to_workspace: # TODO: share Grakn with other jobs by putting it in the workspace
          root: ~/grakn
          paths:
            - .

  client-java:
    machine: true
    working_directory: ~/grakn
    steps:
    - checkout
    - bazel_install
    - bazel_add_rbe_credential
    - bazel:
        command: bazel test //client-java/... --test_size_filters=small --test_output=errors
    - bazel:
        command: bazel test //client-java/... --test_size_filters=medium,large,enormous --test_output=errors

  common:
    machine: true
    working_directory: ~/grakn
    steps:
    - checkout
    - bazel_install
    - bazel_add_rbe_credential
    - bazel:
        command: bazel test //common/... --test_output=errors

  console:
    machine: true
    working_directory: ~/grakn
    steps:
      - checkout
      - bazel_install
      - bazel_add_rbe_credential
      - rpm_install
      - bazel:
          command: bazel test //console/... --test_output=errors

  graql:
    machine: true
    working_directory: ~/grakn
    steps:
    - checkout
    - bazel_install
    - bazel_add_rbe_credential
    - bazel:
        command: bazel test //graql/... --test_output=errors

  server:
    machine: true
    working_directory: ~/grakn
    steps:
    - checkout
    - bazel_install
    - bazel_add_rbe_credential
    - rpm_install
    - bazel:
        command: bazel test //server/... --test_output=errors

  test-integration:
    machine: true
    working_directory: ~/grakn
    steps:
      - checkout
      - bazel_install
      - bazel_add_rbe_credential
      - bazel:
          command: bazel test //test-integration/server/... --test_output=errors
      - bazel:
          command: bazel test //test-integration/graql/internal/... --test_output=errors
      - bazel:
          command: bazel test //test-integration/graql/query/... --test_output=errors

  test-integration-reasoner:
    machine: true
    working_directory: ~/grakn
    steps:
    - checkout
    - bazel_install
    - bazel_add_rbe_credential
    - bazel:
        command: bazel test //test-integration/graql/reasoner/... --test_output=errors

  test-integration-analytics:
    machine: true
    working_directory: ~/grakn
    steps:
    - checkout
    - bazel_install
    - bazel_add_rbe_credential
    - bazel:
        command: bazel test //test-integration/graql/analytics/... --test_output=errors

  test-end-to-end:
    machine: true
    working_directory: ~/grakn
    steps:
      - checkout
      - bazel_install
      - bazel_add_rbe_credential
      - bazel:
          command: bazel build //:distribution
      - bazel:
          command: bazel test //test-end-to-end:test-end-to-end --test_output=streamed --spawn_strategy=standalone

  docs-update-grakn-dependency-on-dev-branch:
    machine: true
    steps:
      - checkout
      - run:
          name: Make docs (development branch) depend on the latest Grakn (master)
          command: |
            mkdir docs
            cd docs
            python ../.circleci/docs-update-grakn-dependency-on-dev-branch.py

  grakn-release-build:
    machine: true
    working_directory: ~/grakn
    steps:
      - checkout
      - bazel_install
      - run: echo 'export GRAKN_VERSION=$(echo ${CIRCLE_TAG} | cut -c 2-)' >> $BASH_ENV # TODO: remove 'v' from tag name and use it as Grakn Version to be released
      - run: mvn --batch-mode install -T 2.5C -DskipTests=true
      - run: mkdir ~/grakn/artifacts
      - run: mv grakn-dist/target/grakn-core-${GRAKN_VERSION}.zip ~/grakn/artifacts
      - persist_to_workspace: # TODO: share Grakn with other jobs by putting it in the workspace
          root: ~/grakn
          paths:
            - ./artifacts
            - ./workbase

workflows:
  ci-pull-request:
    jobs:
      - build:
          filters:
            branches:
              ignore: master
      - client-java:
          filters:
            branches:
              ignore: master
      - common:
          filters:
            branches:
              ignore: master
      - console:
          filters:
            branches:
              ignore: master
      - graql:
          filters:
            branches:
              ignore: master
      - server:
          filters:
            branches:
              ignore: master
      - test-integration:
          filters:
            branches:
              ignore: master
      - test-integration-reasoner:
          filters:
            branches:
              ignore: master
      - test-integration-analytics:
          filters:
            branches:
              ignore: master
      - test-end-to-end:
          filters:
            branches:
              ignore: master

  ci-master-branch:
    jobs:
      - build:
          filters:
            branches:
              only: master
      - client-java:
          filters:
            branches:
              only: master
      - common:
          filters:
            branches:
              only: master
      - console:
          filters:
            branches:
              only: master
      - graql:
          filters:
            branches:
              only: master
      - server:
          filters:
            branches:
              only: master
      - test-integration:
          filters:
            branches:
              only: master
      - test-integration-reasoner:
          filters:
            branches:
              only: master
      - test-integration-analytics:
          filters:
            branches:
              only: master
      - test-end-to-end:
          filters:
            branches:
              only: master
      - docs-update-grakn-dependency-on-dev-branch:
          requires:
            - build
            - client-java
            - common
            - console
            - graql
            - server
            - test-integration
            - test-integration-reasoner
            - test-integration-analytics
            - test-end-to-end
          filters:
            branches:
              only: master

  build-and-deploy:
    jobs:
      - grakn-release-build:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
