# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    machine: true
    working_directory: ~/grakn
    steps:
      - checkout

      ##############################################################################
      # update repositories and install toolings (yarn, maven, node)
      ##############################################################################
      - run:
          name: Prepare apt repositories
          command: |
            curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
            echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
            sudo apt-get install apt-transport-https
            sudo apt-get update
      - run:
          name: Install yarn and maven
          command: sudo apt-get -y install yarn maven
      - run:
          name: Install nvm and node
          command: |
            curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.5/install.sh | bash
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm install v10.5.0
            nvm alias default v10.5.0
            echo 'export NVM_DIR="/opt/circleci/.nvm"' >> $BASH_ENV
            echo "[ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\"" >> $BASH_ENV

      ##############################################################################
      # - restore .m2 cache to speed up build
      # - build Grakn
      # - save the new .m2 cache
      ##############################################################################
      - restore_cache:
          name: Restore maven m2 cache
          key: grakn-cache-m2-version-8
      - run: mvn versions:set -DnewVersion=test -DgenerateBackupPoms=false
      - run: mvn --batch-mode install -T 2.5C -DskipTests=true
      - run: tar -xf grakn-dist/target/grakn-dist-test.tar.gz -C grakn-dist/target/
      - save_cache:
          name: Save maven m2 cache
          paths:
            - ~/.m2
          key: grakn-cache-m2-version-8

      ##############################################################################
      # share Grakn with other jobs by putting it in the workspace
      ##############################################################################
      - persist_to_workspace:
          root: ~/grakn
          paths:
            - .

  unit-it-test-1:
    machine: true
    working_directory: ~/grakn
    steps:
      ##############################################################################
      # update repositories and install toolings (yarn, maven, node)
      ##############################################################################
      - run:
          name: Prepare apt repositories
          command: |
            curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
            echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
            sudo apt-get install apt-transport-https
            sudo apt-get update
      - run:
          name: Install yarn and maven
          command: sudo apt-get -y install yarn maven
      - run:
          name: Install nvm and node
          command: |
            curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.5/install.sh | bash
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm install v10.5.0
            nvm alias default v10.5.0
            echo 'export NVM_DIR="/opt/circleci/.nvm"' >> $BASH_ENV
            echo "[ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\"" >> $BASH_ENV

      ##############################################################################
      # - attach to workspace
      # - restore .m2 cache to speed up build
      # - parallelise unit and it tests by building an 'includesFile' for unit tests (maven surefire) and it tests (maven failsafe)
      # - run tests
      ##############################################################################
      - attach_workspace:
          at: ~/grakn
      - restore_cache:
          name: Restore maven m2 cache
          key: grakn-cache-m2-version-8
      - run:
          name: Create parallelise-unit-tests.txt and parallelise-it-tests.txt For Parallelisation Purpose
          command: |
            circleci tests glob "**/src/test/java/**/*Test.java" | circleci tests split --total="2" --index="0" > parallelise-unit-tests-filename.txt
            cat parallelise-unit-tests-filename.txt | xargs -I {} basename {} | xargs -I {} echo "**/{}" | sort > parallelise-unit-tests.txt
            circleci tests glob "**/src/test/java/**/*IT.java" | circleci tests split --total="2" --index="0" > parallelise-it-tests-filename.txt
            cat parallelise-it-tests-filename.txt | xargs -I {} basename {} | xargs -I {} echo "**/{}" | sort > parallelise-it-tests.txt
      - run:
          name: List Of Unit Tests To Be Ran On This Machine
          command: cat parallelise-unit-tests.txt
      - run:
          name: List Of IT Tests To Be Ran On This Machine
          command: cat parallelise-it-tests.txt
      - run: mvn verify -Dsurefire.includesFile=`echo ~/grakn/parallelise-unit-tests.txt` -Dfailsafe.includesFile=`echo ~/grakn/parallelise-it-tests.txt` -P janus -U -Djetty.log.level=WARNING -Djetty.log.appender=STDOUT -DMaven.test.failure.ignore=true -Dsurefire.rerunFailingTestsCount=1

      ##############################################################################
      # make and store reports
      ##############################################################################
      - run:
          name: Save test results
          command: |
            mkdir -p ~/grakn-surefire-reports/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/grakn-surefire-reports/ \;
          when: always
      - store_artifacts:
          path: ~/grakn-surefire-reports/
      - store_test_results:
          path: ~/grakn-surefire-reports/

  unit-it-test-2:
    machine: true
    working_directory: ~/grakn
    steps:
      ##############################################################################
      # update repositories and install toolings (yarn, maven, node)
      ##############################################################################
      - run:
          name: Prepare apt repositories
          command: |
            curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
            echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
            sudo apt-get install apt-transport-https
            sudo apt-get update
      - run:
          name: Install yarn and maven
          command: sudo apt-get -y install yarn maven
      - run:
          name: Install nvm and node
          command: |
            curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.5/install.sh | bash
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm install v10.5.0
            nvm alias default v10.5.0
            echo 'export NVM_DIR="/opt/circleci/.nvm"' >> $BASH_ENV
            echo "[ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\"" >> $BASH_ENV

      ##############################################################################
      # - attach to workspace
      # - restore .m2 cache to speed up build
      # - parallelise unit and it tests by building an 'includesFile' for unit tests (maven surefire) and it tests (maven failsafe)
      # - run tests
      ##############################################################################
      - attach_workspace:
          at: ~/grakn
      - restore_cache:
          name: Restore maven m2 cache
          key: grakn-cache-m2-version-8
      - run:
          name: Create parallelise-unit-tests.txt and parallelise-it-tests.txt For Parallelisation Purpose
          command: |
            circleci tests glob "**/src/test/java/**/*Test.java" | circleci tests split --total="2" --index="1" > parallelise-unit-tests-filename.txt
            cat parallelise-unit-tests-filename.txt | xargs -I {} basename {} | xargs -I {} echo "**/{}" | sort > parallelise-unit-tests.txt
            circleci tests glob "**/src/test/java/**/*IT.java" | circleci tests split --total="2" --index="1" > parallelise-it-tests-filename.txt
            cat parallelise-it-tests-filename.txt | xargs -I {} basename {} | xargs -I {} echo "**/{}" | sort > parallelise-it-tests.txt
      - run:
          name: List Of Unit Tests To Be Ran On This Machine
          command: cat parallelise-unit-tests.txt
      - run:
          name: List Of IT Tests To Be Ran On This Machine
          command: cat parallelise-it-tests.txt
      - run: mvn verify -Dsurefire.includesFile=`echo ~/grakn/parallelise-unit-tests.txt` -Dfailsafe.includesFile=`echo ~/grakn/parallelise-it-tests.txt` -P janus -U -Djetty.log.level=WARNING -Djetty.log.appender=STDOUT -DMaven.test.failure.ignore=true -Dsurefire.rerunFailingTestsCount=1

      ##############################################################################
      # make and store reports
      ##############################################################################
      - run:
          name: Save test results
          command: |
            mkdir -p ~/grakn-surefire-reports/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/grakn-surefire-reports/ \;
          when: always
      - store_artifacts:
          path: ~/grakn-surefire-reports/
      - store_test_results:
          path: ~/grakn-surefire-reports/

  distribution-e2e:
    machine: true
    working_directory: ~/grakn
    steps:
      ##############################################################################
      # - attach to workspace
      # - restore .m2 cache to speed up build
      # - run tests
      ##############################################################################
      - attach_workspace:
          at: ~/grakn
      - restore_cache:
          name: Restore maven m2 cache
          key: grakn-cache-m2-version-8
      - run: mvn verify -pl :test-distribution -Dtest="ai.grakn.distribution.**"

      ##############################################################################
      # make and store reports
      ##############################################################################
      - run:
          name: Save test results
          command: |
              mkdir -p ~/grakn-surefire-reports/
              find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/grakn-surefire-reports/ \;
          when: always
      - store_artifacts:
          path: ~/grakn-surefire-reports/
      - store_test_results:
          path: ~/grakn-surefire-reports/

  snb-e2e:
    machine: true
    working_directory: ~/grakn
    steps:
      - attach_workspace:
          at: ~/grakn
      - restore_cache:
          name: Restore maven m2 cache
          key: grakn-cache-m2-version-8
      - run: nohup grakn-dist/target/grakn-dist-test/grakn server start
      - run: PATH=$PATH:./grakn-test/test-snb/src/main/bash:./grakn-test/test-integration/src/test/bash:./grakn-dist/target/grakn-dist-test PACKAGE=./grakn-dist/target/grakn-dist-test WORKSPACE=. ./grakn-test/test-snb/src/main/bash/load.sh
      - run: PATH=$PATH:./grakn-test/test-snb/src/main/bash:./grakn-test/test-integration/src/test/bash:./grakn-dist/target/grakn-dist-test PACKAGE=./grakn-dist/target/grakn-dist-test WORKSPACE=. ./grakn-test/test-snb/src/main/bash/validate.sh

  biomed-e2e:
    machine: true
    working_directory: ~/grakn
    steps:
      - attach_workspace:
          at: ~/grakn
      - restore_cache:
          name: Restore maven m2 cache
          key: grakn-cache-m2-version-8
      - run: nohup grakn-dist/target/grakn-dist-test/grakn server start
      - run: PATH=$PATH:./grakn-dist/target/grakn-dist-test ./grakn-test/test-biomed/load.sh
      - run: PATH=$PATH:./grakn-dist/target/grakn-dist-test ./grakn-test/test-biomed/validate.sh

workflows:
  version: 2
  run-all-tests:
    jobs:
      - build
      - unit-it-test-1:
          requires:
            - build
      - unit-it-test-2:
          requires:
            - build
      - distribution-e2e:
          requires:
            - build
      - snb-e2e:
          requires:
            - build
      - biomed-e2e:
          requires:
            - build
