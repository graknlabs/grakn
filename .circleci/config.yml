#
# GRAKN.AI - THE KNOWLEDGE GRAPH
# Copyright (C) 2018 Grakn Labs Ltd
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#


version: 2.1
commands:
  install-bazel-linux:
    steps:
      - run:
          name: Install bazel and RBE credential
          command: |
            # Install bazel
            curl -OL https://github.com/bazelbuild/bazel/releases/download/0.20.0/bazel-0.20.0-installer-linux-x86_64.sh
            chmod +x bazel-0.20.0-installer-linux-x86_64.sh
            sudo ./bazel-0.20.0-installer-linux-x86_64.sh

            # Install RBE credential
            bazel run @graknlabs_build_tools//ci:install-bazel-rbe-credential

  install-bazel-mac:
    steps:
      - run:
          name: Install bazel and RBE credential
          command: |
            # Install bazel
            curl -OL https://github.com/bazelbuild/bazel/releases/download/0.20.0/bazel-0.20.0-installer-darwin-x86_64.sh
            chmod +x bazel-0.20.0-installer-darwin-x86_64.sh
            sudo ./bazel-0.20.0-installer-darwin-x86_64.sh

            # Install RBE credential
            bazel run @graknlabs_build_tools//ci:install-bazel-rbe-credential

  install-rpm:
    steps:
      - run: sudo apt update && sudo apt install rpm -y

  run-bazel-rbe:
    parameters:
      command:
          type: string
    steps:
      - run: bazel run @graknlabs_build_tools//ci:run-bazel-rbe << parameters.command >>

jobs:
  build:
    machine: true
    working_directory: ~/grakn
    steps:
      - checkout
      - install-bazel-linux
      - install-rpm
      - run: bazel run @graknlabs_build_tools//checkstyle:test-coverage
      - run-bazel-rbe:
          command: bazel build //...

  test-common:
    machine: true
    working_directory: ~/grakn
    steps:
      - checkout
      - install-bazel-linux
      - run-bazel-rbe:
          command: bazel test //common/... --test_output=errors

  test-console:
    machine: true
    working_directory: ~/grakn
    steps:
      - checkout
      - install-bazel-linux
      - install-rpm
      - run-bazel-rbe:
          command: bazel test //console/... --test_output=errors

  test-server:
    machine: true
    working_directory: ~/grakn
    steps:
      - checkout
      - install-bazel-linux
      - install-rpm
      - run-bazel-rbe:
          command: bazel test //server/... --test_output=errors

  test-integration:
    machine: true
    working_directory: ~/grakn
    steps:
      - checkout
      - install-bazel-linux
      - run-bazel-rbe:
          command: bazel test //test-integration/server/... --test_output=errors
      - run-bazel-rbe:
          command: bazel test //test-integration/graql/executor/... --test_output=errors
      - run-bazel-rbe:
          command: bazel test //test-integration/graql/query/... --test_output=errors

  test-integration-reasoner:
    machine: true
    working_directory: ~/grakn
    steps:
    - checkout
    - install-bazel-linux
    - run: bazel run @graknlabs_build_tools//ci:install-bazel-rbe-credential
    - run-bazel-rbe:
        command: bazel test //test-integration/graql/reasoner/... --test_output=errors

  test-integration-analytics:
    machine: true
    working_directory: ~/grakn
    steps:
    - checkout
    - install-bazel-linux
    - run: bazel run @graknlabs_build_tools//ci:install-bazel-rbe-credential
    - run-bazel-rbe:
        command: bazel test //test-integration/graql/analytics/... --test_output=errors

  test-end-to-end:
    machine: true
    working_directory: ~/grakn
    steps:
      - checkout
      - install-bazel-linux
      - run-bazel-rbe:
          command: bazel test //test-end-to-end:test-end-to-end --test_output=streamed --spawn_strategy=standalone

  test-assembly-mac-zip:
    macos:
      xcode: "9.0"
    working_directory: ~/grakn
    steps:
      - checkout
      - install-bazel-mac
      - run: bazel build //:assemble-mac-zip
      - run: unzip bazel-genfiles/grakn-core-all-mac.zip -d bazel-genfiles/
      - run: nohup bazel-genfiles/grakn-core-all-mac/grakn server start
      - run: bazel test //test/common:grakn-application-test --test_output=streamed --spawn_strategy=standalone --cache_test_results=no
      - run: bazel-genfiles/grakn-core-all-mac/grakn server stop

# TODO: add after fixing the python issue regarding missing bdist_wheel
#  test-assembly-windows-zip:
#    machine: true
#    working_directory: ~/grakn
#    steps:
#      - checkout
#      - run:
#          command: test/assembly/windows/windows-zip.py
#          no_output_timeout: 20m

  test-assembly-linux-targz:
    machine: true
    working_directory: ~/grakn
    steps:
      - checkout
      - install-bazel-linux
      - run: bazel build //:assemble-linux-targz
      - run: tar -xf bazel-genfiles/grakn-core-all-linux.tar.gz -C bazel-genfiles
      - run: nohup bazel-genfiles/grakn-core-all-linux/grakn server start
      - run: bazel test //test/common:grakn-application-test --test_output=streamed --spawn_strategy=standalone --cache_test_results=no
      - run: bazel-genfiles/grakn-core-all-linux/grakn server stop

  test-assembly-linux-apt:
    machine: true
    working_directory: ~/grakn
    steps:
      - checkout
      - install-bazel-linux
      - run: echo $(date +%s)-$(cat VERSION)-$CIRCLE_SHA1 > VERSION
      - run: echo VERSION=$(cat VERSION)
      - run: cat VERSION
      - run: bazel build //bin:assemble-linux-apt
      - run: bazel build //server:assemble-linux-apt
      - run: bazel build //console:assemble-linux-apt
      - run: sudo dpkg -i bazel-bin/bin/grakn-core-bin__all.deb
      - run: sudo dpkg -i bazel-bin/server/grakn-core-server__all.deb
      - run: sudo dpkg -i bazel-bin/console/grakn-core-console__all.deb
      - run: sudo chown -R circleci:circleci /opt/grakn/ # TODO: how do we avoid having to chown?
      - run: nohup grakn server start
      - run: bazel test //test/common:grakn-application-test --test_output=streamed --spawn_strategy=standalone --cache_test_results=no
      - run: grakn server stop
      - run: bazel run //bin:deploy-apt -- test $REPO_GRAKN_USERNAME $REPO_GRAKN_PASSWORD
      - run: bazel run //console:deploy-apt -- test $REPO_GRAKN_USERNAME $REPO_GRAKN_PASSWORD
      - run: bazel run //server:deploy-apt -- test $REPO_GRAKN_USERNAME $REPO_GRAKN_PASSWORD
      - persist_to_workspace:
          root: ~/grakn
          paths:
            - VERSION

  test-deployment-apt:
    machine: true
    working_directory: ~/grakn
    steps:
      - checkout
      - attach_workspace:
          at: ~/circleci-workspace
      - install-bazel-linux
      - run: echo "deb [ arch=all ] https://repo.grakn.ai/repository/test-deb/ trusty main" | sudo tee -a /etc/apt/sources.list.d/grakn-core.list
      - run: sudo apt-key adv --keyserver keyserver.ubuntu.com --recv 8F3DA4B5E9AEF44C
      - run: sudo apt update
      - run: mv ~/circleci-workspace/VERSION VERSION
      - run: cat VERSION
      - run: sudo apt install grakn-core-server=$(cat VERSION) grakn-core-console=$(cat VERSION)
      - run: sudo chown -R circleci:circleci /opt/grakn/ # TODO: how do we avoid having to chown?
      - run: nohup grakn server start
      - run: bazel test //test/common:grakn-application-test --test_output=streamed --spawn_strategy=standalone --cache_test_results=no
      - run: grakn server stop

  test-assembly-linux-rpm:
    machine: true
    working_directory: ~/grakn
    steps:
      - checkout
      - install-bazel-linux
      - run: sudo apt install rpm
      - run: echo $(cat VERSION)-$CIRCLE_SHA1 > VERSION
      - run: sed -i -e 's/-/_/g' VERSION
      - run: cat VERSION
      - run: bazel run //bin:deploy-rpm -- test $REPO_GRAKN_USERNAME $REPO_GRAKN_PASSWORD
      - run: bazel run //server:deploy-rpm -- test $REPO_GRAKN_USERNAME $REPO_GRAKN_PASSWORD
      - run: bazel run //console:deploy-rpm -- test $REPO_GRAKN_USERNAME $REPO_GRAKN_PASSWORD


  test-deployment-rpm:
    machine: true
    working_directory: ~/grakn
    steps:
      - checkout
      - run: test/deployment/rpm.py

  test-assembly-docker:
    machine: true
    working_directory: ~/grakn
    steps:
      - checkout
      - install-bazel-linux
      - run: test/assembly/docker.py

  sync-dependencies:
    machine: true
    steps:
      - checkout
      - install-bazel-linux
      - run: |
          bazel run @graknlabs_build_tools//ci:sync-dependencies -- \
          --source grakn@$CIRCLE_SHA1 \
          --targets \
          client-java:master client-python:master client-nodejs:master \
          workbase:master docs:development examples:development
  
  release-approval:
    machine: true
    steps:
      - checkout
      - install-bazel-linux
      - run: bazel run @graknlabs_build_tools//ci:release-approval

  release-github-draft:
    machine: true
    working_directory: ~/grakn
    steps:
      - checkout
      - install-bazel-linux
      - run: bazel run //:deploy-github-zip -- ${GRABL_CREDENTIAL}

  release-cleanup:
    machine: true
    steps:
      - checkout
      - run: git push --delete origin grakn-core-release-branch

workflows:
  grakn-core:
    jobs:
      - build:
          filters:
            branches:
              ignore: grakn-core-release-branch
      - test-common:
          filters:
            branches:
              ignore: grakn-core-release-branch
      - test-console:
          filters:
            branches:
              ignore: grakn-core-release-branch
      - test-server:
          filters:
            branches:
              ignore: grakn-core-release-branch
      - test-integration:
          filters:
            branches:
              ignore: grakn-core-release-branch
      - test-integration-reasoner:
          filters:
            branches:
              ignore: grakn-core-release-branch
      - test-integration-analytics:
          filters:
            branches:
              ignore: grakn-core-release-branch
      - test-end-to-end:
          filters:
            branches:
              ignore: grakn-core-release-branch
      - test-assembly-mac-zip:
          filters:
            branches:
              only: master
#      - test-assembly-windows-zip:
#          filters:
#            branches:
#              only: master
      - test-assembly-linux-targz:
          filters:
            branches:
              only: master
      - test-assembly-linux-apt:
          filters:
            branches:
              only: master
      - test-deployment-apt:
          filters:
            branches:
              only: master
          requires:
            - test-assembly-linux-apt
      - test-assembly-linux-rpm:
          filters:
            branches:
              only: master
      - test-deployment-rpm:
          filters:
            branches:
              only: master
          requires:
            - test-assembly-linux-rpm
      - test-assembly-docker:
          filters:
            branches:
              only: master
      - sync-dependencies:
          filters:
            branches:
              only: master
          requires:
            - build
            - test-common
            - test-console
            - test-server
            - test-integration
            - test-integration-reasoner
            - test-integration-analytics
            - test-end-to-end
      - release-approval:
          filters:
            branches:
              only: master
          requires:
            - sync-dependencies

  grakn-core-release:
    jobs:
      - release-github-draft:
          filters:
            branches:
              only: grakn-core-release-branch
      - release-cleanup:
          filters:
            branches:
              only: grakn-core-release-branch
          requires:
            - release-github-draft