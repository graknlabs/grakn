version: 2.1
commands:
  bazel_install:
    steps:
      - run:
          name: Bazel - Install
          command: |
            curl -OL https://github.com/bazelbuild/bazel/releases/download/0.20.0/bazel-0.20.0-installer-linux-x86_64.sh
            chmod +x bazel-0.20.0-installer-linux-x86_64.sh
            sudo ./bazel-0.20.0-installer-linux-x86_64.sh
  bazel_install_mac:
    steps:
      - run:
          name: Bazel - Install
          command: |
            curl -OL https://github.com/bazelbuild/bazel/releases/download/0.20.0/bazel-0.20.0-installer-darwin-x86_64.sh
            chmod +x bazel-0.20.0-installer-darwin-x86_64.sh
            sudo ./bazel-0.20.0-installer-darwin-x86_64.sh
  bazel_add_rbe_credential:
    steps:
      - run:
          name: Bazel - Add RBE Credential
          command: |
            if [[ -n "$BAZEL_RBE_CREDENTIAL" ]]; then
              BAZEL_RBE_CREDENTIAL_LOCATION=~/.config/gcloud/application_default_credentials.json
              echo "An RBE credential is found and will be saved to $BAZEL_RBE_CREDENTIAL_LOCATION. Bazel will be executed with RBE support."
              mkdir -p ~/.config/gcloud/
              echo $BAZEL_RBE_CREDENTIAL > "$BAZEL_RBE_CREDENTIAL_LOCATION"
            else
              echo "No RBE credential found. Bazel will be executed locally without RBE support."
            fi

  bazel:
    parameters:
      command:
          type: string
    steps:
      - run:
          name: Bazel - Execute
          command: |
            if [[ -f ~/.config/gcloud/application_default_credentials.json ]]; then
              echo "Bazel will be executed with RBE support. This means the build is remotely executed and the cache will be re-used by subsequent CI jobs."
              CMD="<< parameters.command >> --config=rbe"
            else
              echo "Bazel will be executed locally (without RBE support)."
              CMD="<< parameters.command >>"
            fi
            echo "Executing $CMD"
            $CMD

  rpm_install:
    steps:
      - run:
          name: Install rpm (for rpmbuild)
          command: sudo apt update && sudo apt install rpm -y

  grabl-is-the-github-user:
    steps:
      - run:
          name: Configure Grabl to be the Github user
          command: |
            git config --global user.email "grabl@grakn.ai"
            git config --global user.name "Grabl"
jobs:
  tests:
    machine: true
    steps:
      - run: echo test succeeded.
  build:
    machine: true
    working_directory: ~/grakn
    steps:
      - checkout
      - bazel_install
      - bazel_add_rbe_credential
      - run: python ./check-for-missing-checkstyle-rule.py
      - rpm_install
      - bazel:
          command: bazel build //...
      - run: mkdir dist/ && mv bazel-genfiles/grakn-core-all.zip dist/
      - persist_to_workspace: # TODO: share Grakn with other jobs by putting it in the workspace
          root: ~/grakn
          paths:
            - .

  client-java:
    machine: true
    working_directory: ~/grakn
    steps:
    - checkout
    - bazel_install
    - bazel_add_rbe_credential
    - bazel:
        command: bazel test //client-java/... --test_size_filters=small --test_output=errors
    - bazel:
        command: bazel test //client-java/... --test_size_filters=medium,large,enormous --test_output=errors

  client-nodejs:
    machine: true
    working_directory: ~/grakn
    steps:
    - checkout
    - bazel_install
    - bazel_add_rbe_credential
    - run: bazel build //:distribution
    - run: unzip bazel-genfiles/grakn-core-all.zip -d bazel-genfiles/dist/
    - run: nohup bazel-genfiles/dist/grakn-core-all/grakn server start
    - run: bazel-genfiles/dist/grakn-core-all/grakn console -f `pwd`/test-end-to-end/test-fixtures/basic-genealogy.gql -k gene
    - run: bazel test //client-nodejs:test-integration --test_output=streamed

  client-python:
    machine: true
    working_directory: ~/grakn
    steps:
    - checkout
    - bazel_install
    - bazel_add_rbe_credential
    - run: bazel build //:distribution
    - run: unzip bazel-genfiles/grakn-core-all.zip -d bazel-genfiles/dist/
    - run: nohup bazel-genfiles/dist/grakn-core-all/grakn server start
    - run: bazel test //client_python:test_integration --test_output=streamed

  common:
    machine: true
    working_directory: ~/grakn
    steps:
    - checkout
    - bazel_install
    - bazel_add_rbe_credential
    - bazel:
        command: bazel test //common/... --test_output=errors

  console:
    machine: true
    working_directory: ~/grakn
    steps:
      - checkout
      - bazel_install
      - bazel_add_rbe_credential
      - rpm_install
      - bazel:
          command: bazel test //console/... --test_output=errors

  graql:
    machine: true
    working_directory: ~/grakn
    steps:
    - checkout
    - bazel_install
    - bazel_add_rbe_credential
    - bazel:
        command: bazel test //graql/... --test_output=errors

  server:
    machine: true
    working_directory: ~/grakn
    steps:
    - checkout
    - bazel_install
    - bazel_add_rbe_credential
    - rpm_install
    - bazel:
        command: bazel test //server/... --test_output=errors

  workbase:
    machine: true
    working_directory: ~/grakn
    steps:
    - checkout
    - bazel_install
    - bazel_add_rbe_credential
    - run: bazel test //workbase:tests-unit --test_output=errors
    - run: sudo apt install xvfb libxtst6 libxss1 libgtk2.0-0 -y
    - run: sudo apt install libnss3 libasound2 libgconf-2-4 -y
    - run: bazel build //:distribution
    - run: unzip bazel-genfiles/grakn-core-all.zip -d bazel-genfiles/dist/
    - run: nohup bazel-genfiles/dist/grakn-core-all/grakn server start
    - run: bazel-genfiles/dist/grakn-core-all/grakn console -f `pwd`/test-end-to-end/test-fixtures/basic-genealogy.gql -k gene
    - run: Xvfb :99 &
    - run: export DISPLAY=:99
    - run: bazel test //workbase:tests-e2e --test_output=streamed

  test-integration:
    machine: true
    working_directory: ~/grakn
    steps:
      - checkout
      - bazel_install
      - bazel_add_rbe_credential
      - bazel:
          command: bazel test //test-integration/server/... --test_output=errors
      - bazel:
          command: bazel test //test-integration/graql/internal/... --test_output=errors
      - bazel:
          command: bazel test //test-integration/graql/query/... --test_output=errors

  test-integration-reasoner:
    machine: true
    working_directory: ~/grakn
    steps:
    - checkout
    - bazel_install
    - bazel_add_rbe_credential
    - bazel:
        command: bazel test //test-integration/graql/reasoner/... --test_output=errors

  test-integration-analytics:
    machine: true
    working_directory: ~/grakn
    steps:
    - checkout
    - bazel_install
    - bazel_add_rbe_credential
    - bazel:
        command: bazel test //test-integration/graql/analytics/... --test_output=errors

  test-end-to-end:
    machine: true
    working_directory: ~/grakn
    steps:
      - checkout
      - bazel_install
      - bazel_add_rbe_credential
      - bazel:
          command: bazel build //:distribution
      - bazel:
          command: bazel test //test-end-to-end:test-end-to-end --test_output=streamed --spawn_strategy=standalone
  distributions:
    machine: true
    steps:
      - run: echo distributions succeeded.
  dist-mac:
    macos:
      xcode: "9.0"
    working_directory: ~/grakn
    steps:
      - checkout
      - bazel_install_mac
      - bazel_add_rbe_credential
      - run: bazel build //:distribution
      - run: unzip bazel-genfiles/grakn-core-all.zip -d bazel-genfiles/dist/
      - run: nohup bazel-genfiles/dist/grakn-core-all/grakn server start
      - run: nohup bazel-genfiles/dist/grakn-core-all/grakn server stop
  dist-ubuntu:
    machine: true
    working_directory: ~/grakn
    steps:
      - run: sudo apt-get update
      - run: sudo apt-get install -y software-properties-common
      - run: sudo add-apt-repository ppa:openjdk-r/ppa
      - run: sudo apt-get update
      - run: sudo apt-get install -y sudo curl unzip git python gcc python-dev build-essential openjdk-8-jdk

      - checkout
      - bazel_install
      - bazel_add_rbe_credential

      - run: bazel build --jobs 1 //:distribution-deb
      - run: sudo dpkg -i bazel-bin/distribution-deb.deb
      - run: bazel build --jobs 1 //server:distribution-deb
      - run: sudo dpkg -i bazel-bin/server/distribution-deb.deb
      - run: bazel build --jobs 1 //console:distribution-deb
      - run: sudo dpkg -i bazel-bin/console/distribution-deb.deb
      - run: nohup grakn server start
      - run: nohup grakn server stop

  dist-centos:
    docker:
      - image: centos:7.6.1810
        environment:
          _JAVA_OPTIONS: -Xmx2g
    working_directory: ~/grakn
    steps:
      - run: yum install -y http://opensource.wandisco.com/centos/7/git/x86_64/wandisco-git-release-7-2.noarch.rpm
      - run: yum update -y
      - run: yum install -y sudo procps which gcc gcc-c++ python-devel unzip git java-1.8.0-openjdk-devel rpm-build
      - run: git version
      - checkout
      - bazel_install
      - bazel_add_rbe_credential
      - run: bazel build --jobs 1 //:distribution-rpm
      - run: yum localinstall -y bazel-bin/distribution-rpm.rpm
      - run: bazel build --jobs 1 //server:distribution-rpm
      - run: yum localinstall -y bazel-bin/server/distribution-rpm.rpm
      - run: bazel build --jobs 1 //console:distribution-rpm
      - run: yum localinstall -y bazel-bin/console/distribution-rpm.rpm
      - run: nohup grakn server start
      - run: nohup grakn server stop

  dist-fedora:
    docker:
      - image: fedora:29
        environment:
          _JAVA_OPTIONS: -Xmx2g
    working_directory: ~/grakn
    steps:
      - run: yum install -y http://opensource.wandisco.com/centos/7/git/x86_64/wandisco-git-release-7-2.noarch.rpm
      - run: yum update -y
      - run: yum install -y sudo procps which gcc gcc-c++ python-devel unzip git java-1.8.0-openjdk-devel rpm-build
      - run: git version
      - checkout
      - bazel_install
      - bazel_add_rbe_credential
      - run: bazel build --jobs 1 //:distribution-rpm
      - run: yum localinstall -y bazel-bin/distribution-rpm.rpm
      - run: bazel build --jobs 1 //server:distribution-rpm
      - run: yum localinstall -y bazel-bin/server/distribution-rpm.rpm
      - run: bazel build --jobs 1 //console:distribution-rpm
      - run: yum localinstall -y bazel-bin/console/distribution-rpm.rpm
      - run: nohup grakn server start
      - run: nohup grakn server stop

  update-grakn-dependency-on-docs-dev-to-match-latest-master-commit:
    machine: true
    steps:
      - grabl-is-the-github-user
      - run: |
          # get the last commit on master of grakn
          new_commit=$(git ls-remote https://github.com/lolski/test-ci-grakn.git HEAD | awk '{ print $1}')
          git clone https://github.com/lolski/test-ci-docs.git
          cd test-ci-docs
          git checkout development
          # update the content of WORKSPACE file to contain the new_commit for grakn dependency
          workspace=$(cat WORKSPACE)
          new_workspace=$(sed -e "s/commit = .*# grakn-dependency/commit = '$new_commit' \# grakn-dependency/g" \<<< "$workspace")
          echo "$new_workspace" > WORKSPACE
          git add .
          git commit -m "set grakn dependency to latest master commit"
          git push https://grabl:5444161b178e1418fac769f586b9ff74e0cf4dc7@github.com/lolski/test-ci-docs.git development
  approve-release:
    machine: true
    steps:
      - run: echo approve-release succeeded.
  deploy-github:
    machine: true
    working_directory: ~/grakn
    steps:
      - checkout
      - bazel_install
      - bazel_add_rbe_credential
      - run: bazel run //:deploy-github-zip -- ${GRABL_TOKEN}
  deploy-maven:
    machine: true
    steps:
      - run: echo deploy-maven succeeded.
  deploy-npm:
    machine: true
    steps:
      - run: echo deploy-npm succeeded.
  deploy-pypi:
    machine: true
    steps:
      - run: echo deploy-pypi succeeded.
  deploy-deb:
    machine: true
    steps:
      - run: echo deploy-deb succeeded.
  deploy-rpm:
    machine: true
    steps:
      - run: echo deploy-rpm succeeded.
  deploy-brew:
    machine: true
    steps:
      - run: echo deploy-brew succeeded.
  deploy-workbase:
    machine: true
    steps:
      - run: echo deploy-workbase succeeded.
  deploy-workbase-mac:
    machine: true
    steps:
      - run: echo deploy-workbase-mac succeeded.
  deploy-workbase-linux:
    machine: true
    steps:
      - run: echo deploy-workbase-linux succeeded.
  deploy-workbase-windows:
    machine: true
    steps:
      - run: echo deploy-workbase-windows succeeded.
  docs-create-pr-to-partially-merge-dev-to-master:
    machine: true
    steps:
      - grabl-is-the-github-user
      - run: |
          git clone https://github.com/lolski/test-ci-docs.git
          cd test-ci-docs
          git checkout -b auto-merge-by-grabl
          # excluding certain files from merge > partial merge
          # see: https://github.com/RWTH-EBC/AixLib/wiki/How-to:-Exclude-files-or-folder-from-merge
          git merge --no-commit --no-ff origin/development ## merge without commiting
          git reset HEAD -- ./03-client-api/ ## unstage the client files
          git stash save --keep-index --include-untracked ## discard unstage changes
          git commit -m "partially merge development to master"
          git push https://grabl:5444161b178e1418fac769f586b9ff74e0cf4dc7@github.com/lolski/ci-docs.git auto-merge-by-grabl
          # using `hub` to make a PR for the partial merge just made
          # see: https://hub.github.com/hub-pull-request.1.html
          wget https://github.com/github/hub/releases/download/v2.7.0/hub-linux-amd64-2.7.0.tgz
          tar -xvzf hub-linux-amd64-2.7.0.tgz
          hub-linux-amd64-2.7.0/bin/hub pull-request -m "Grabl - merging development to master with the exception of client files
          This is an automated PR made by Grabl to merge development to master. The merge ignores changes made to the client files. Make sure to review all changes before approving. Docs on master must by in sync with the latest RELEASE of Grakn and its Clients."
  docs-deploy-to-production:
    machine: true
    steps:
      - grabl-is-the-github-user
      - run: |
          # --recursive clones web-dev as well as the docs submodule
          git clone --recursive git@github.com:lolski/test-ci-web-dev.git
          cd test-ci-web-dev
          cd docs
          git pull origin master
          cd ../
          git add .
          git commit -m "update docs submodule"
          git push https://grabl:5444161b178e1418fac769f586b9ff74e0cf4dc7@github.com/lolski/test-ci-web-dev.git master
workflows:
  version: 2
  ci-pipeline-pr:
    jobs:
      - tests
      - client-java:
          requires:
            - tests
      - common:
          requires:
            - tests
      - console:
          requires:
            - tests
      - distributions:
          requires:
            - client-java
            - common
            - console
      - dist-mac:
          requires:
            - distributions
      - dist-ubuntu:
          requires:
            - distributions
  ci-pipeline-release:
    jobs:
      - tests
      - client-java:
          requires:
            - tests
      - common:
          requires:
            - tests
      - console:
          requires:
            - tests
      - distributions:
          requires:
            - client-java
            - common
            - console
      - dist-mac:
          requires:
            - distributions
      - dist-ubuntu:
          requires:
            - distributions
      - update-grakn-dependency-on-docs-dev-to-match-latest-master-commit:
          requires:
            - dist-ubuntu
            - dist-mac
      - approve-deploy-github:
          type: approval
          requires:
            - update-grakn-dependency-on-docs-dev-to-match-latest-master-commit
      - deploy-github:
          requires:
            - approve-deploy-github
      - docs-create-pr-to-partially-merge-dev-to-master:
          requires:
            - deploy-github
      - is-docs-merged:
          type: approval
          requires:
            - docs-create-pr-to-partially-merge-dev-to-master
      - docs-deploy-to-production:
          requires:
            - is-docs-merged