define

age sub attribute,
    value long;

annual-wage sub attribute,
    value double;

company-number sub attribute,
    value long;

content-language sub attribute,
    value string;

contracted-hours sub attribute,
    value double;

currency sub attribute,
    value string,
    has currency-code;

currency-code sub attribute,
    value string;

date-of-event sub attribute,
    abstract,
    value datetime;

    date-of-birth sub date-of-event,
        value datetime;

    date-of-incorporation sub date-of-event,
        value datetime;

    date-of-marriage sub date-of-event,
        value datetime;

    end-date sub date-of-event,
        value datetime;

    relocation-date sub date-of-event,
        value datetime;

    start-date sub date-of-event,
        value datetime;

date-signed sub attribute,
    value datetime;

description sub attribute,
    value string;

    product-description sub description,
        value string;

    service-description sub description,
        value string;

email sub attribute,
    value string;

gender sub attribute,
    value string;

identifier sub attribute,
    value long;

    marriage-id sub identifier,
        value long;

identifier-double sub attribute,
    value double;

    product-barcode sub identifier-double,
        value double;

    service-id sub identifier-double,
        value double;

is-current sub attribute,
    value boolean;

is-taxable sub attribute,
    value boolean;

language sub attribute,
    value string;

name sub attribute,
    value string;

    forename sub name,
        value string;

    location-name sub name,
        value string;

    organisation-name sub name,
        value string;

        charity-name sub organisation-name,
            value string;

        company-name sub organisation-name,
            value string;

        university-name sub organisation-name,
            value string;

    product-name sub name,
        value string;

    service-name sub name,
        value string;

    surname sub name,
        value string;

num-characters sub attribute,
    value long;

product-quantity sub attribute,
    value long;

text-content sub attribute,
    value string,
    has content-language,
    has num-characters;

    contract-content sub text-content,
        value string;

value sub attribute,
    value double;

legal-document sub entity,
    has date-signed,
    has text-content;

    employment-contract sub legal-document,
        has contracted-hours,
        has contract-content,
        plays employment_contract;

location sub entity,
    abstract,
    key location-name,
    plays born-in_place-of-birth,
    plays locates_location,
    plays location-hierarchy_subordinate,
    plays location-hierarchy_superior,
    plays relocation_new-location,
    plays relocation_previous-location;

    city sub location,
        plays residency_location;

    continent sub location,
        plays produced-in_continent;

    country sub location,
        has currency,
        has language,
        plays incorporation_incorporating;

occupation sub entity,
    key name,
    plays employment_profession;

organisation sub entity;

    charity sub organisation,
        has charity-name,
        plays transaction_buyer,
        plays volunteering_cause;

    company sub organisation,
        key company-number,
        key company-name,
        plays employment_employer,
        plays incorporation_incorporated,
        plays transaction_buyer,
        plays transaction_vendor;

    university sub organisation,
        has university-name,
        plays employment_employer,
        plays studentship_school,
        plays transaction_buyer,
        plays transaction_vendor;

person sub entity,
    key email,
    has age,
    has date-of-birth,
    has gender,
    has forename,
    has surname,
    plays born-in_child,
    plays employment_employee,
    plays friendship_friend,
    plays marriage_husband,
    plays marriage_wife,
    plays parentship_child,
    plays parentship_parent,
    plays relocation_relocated-person,
    plays residency_resident,
    plays studentship_student,
    plays volunteering_volunteer;

    unemployed-person sub person;

product sub entity,
    key product-barcode,
    has product-description,
    has product-name,
    plays produced-in_product,
    plays transaction_merchandise;

service sub entity,
    key service-id,
    has service-description,
    has service-name,
    plays transaction_merchandise;

friendship sub relation,
    has end-date,
    has start-date,
    relates friendship_friend;

incorporation sub relation,
    has date-of-incorporation,
    relates incorporation_incorporated,
    relates incorporation_incorporating;

locates sub relation,
    relates locates_located,
    relates locates_location;

    born-in sub locates,
        relates born-in_child as locates_located,
        relates born-in_place-of-birth as locates_location;

location-hierarchy sub relation,
    relates location-hierarchy_subordinate,
    relates location-hierarchy_superior;

marriage sub relation,
    key marriage-id,
    has date-of-marriage,
    plays locates_located,
    relates marriage_husband,
    relates marriage_wife;

membership sub relation,
    has end-date,
    has start-date,
    relates membership_group,
    relates membership_member;

    employment sub membership,
        has annual-wage,
        has contracted-hours,
        plays locates_located,
        relates employment_contract,
        relates employment_employee as membership_member,
        relates employment_employer as membership_group,
        relates employment_profession;

    studentship sub membership,
        relates studentship_school as membership_group,
        relates studentship_student as membership_member;

    volunteering sub membership,
        relates volunteering_cause as membership_group,
        relates volunteering_volunteer as membership_member;

parentship sub relation,
    relates parentship_child,
    relates parentship_parent;

produced-in sub relation,
    relates produced-in_continent,
    relates produced-in_product;

relocation sub relation,
    has relocation-date,
    relates relocation_new-location,
    relates relocation_previous-location,
    relates relocation_relocated-person;

residency sub relation,
    has end-date,
    has start-date,
    has is-current,
    relates residency_location,
    relates residency_resident;

transaction sub relation,
    has currency,
    has is-taxable,
    has product-quantity,
    has value,
    plays locates_located,
    relates transaction_buyer,
    relates transaction_merchandise,
    relates transaction_vendor;

born-in-location-implies-residency sub rule,
    when {
        $bi (born-in_place-of-birth: $location, born-in_child: $person) isa born-in;
    }, then {
        (residency_resident: $person, residency_location: $location) isa residency;
    };

born-in-location-implies-residency-date sub rule,
    when {
        $bi (born-in_place-of-birth: $location, born-in_child: $person) isa born-in;
        $person isa person, has date-of-birth $dob;
        $r (residency_resident: $person, residency_location: $location) isa residency;
    }, then {
        $r has start-date $dob;
    };

contract-has-language-of-location-is-there-is-only-one-language sub rule,
    when {
        $emp (employment_contract: $contract) isa employment;
        $contract isa employment-contract, has contract-content $content;
        ($emp, $location1) isa locates;
        $location1 has language $lang1;
        not {
            ($emp, $location2) isa locates;
            $location2 has language $lang2;
            $lang1 !== $lang2;
        };
    }, then {
        $content has content-language $lang1;
    };

contracted-hours-apply-to-employment sub rule,
    when {
        $emp (employment_contract: $c) isa employment;
        $c isa employment-contract, has contracted-hours $hours;
    }, then {
        $emp has contracted-hours $hours;
    };

label-non-current-residency sub rule,
    when {
        $res isa residency, has end-date $end-date;
    }, then {
        $res has is-current false;
    };

locates-transitive-with-location-hierarchy sub rule,
    when {
        $loc (locates_located: $thing, locates_location: $a) isa locates;
        $lh2 (location-hierarchy_superior: $b, location-hierarchy_subordinate: $a) isa location-hierarchy;
    }, then {
        (locates_located: $thing, locates_location: $b) isa locates;
    };

location-hierarchy-transitivity sub rule,
    when {
        $lh1 (location-hierarchy_superior: $a, location-hierarchy_subordinate: $b) isa location-hierarchy;
        $lh2 (location-hierarchy_superior: $b, location-hierarchy_subordinate: $c) isa location-hierarchy;
    }, then {
        (location-hierarchy_superior: $a, location-hierarchy_subordinate: $c) isa location-hierarchy;
    };

person-membership-of-organisation-means-relocation sub rule,
    when {
        (membership_member: $person, membership_group: $group) isa membership;
        (locates_located: $group, locates_location: $location) isa locates;
    }, then {
        (relocation_relocated-person: $person, relocation_previous-location: $location) isa relocation;
    };

person-membership-of-organisation-means-relocation-date sub rule,
    when {
        (membership_member: $person, membership_group: $group) isa membership, has start-date $membership-start-date;
        (locates_located: $group, locates_location: $location) isa locates;
        $rel (relocation_relocated-person: $person, relocation_previous-location: $location) isa relocation;
    }, then {
        $rel has relocation-date $membership-start-date;
    };

person-relocating-adds-new-residency sub rule,
    when {
        $rel (relocation_relocated-person: $person, relocation_new-location: $location) isa relocation;
    }, then {
        (residency_resident: $person, residency_location: $location) isa residency;
    };

person-relocating-ends-old-residency sub rule,
    when {
        $rel (relocation_relocated-person: $person, relocation_previous-location: $location) isa relocation, has relocation-date $rel-date;
        $old-residency (residency_resident: $person, residency_location: $location) isa residency;
    }, then {
        $old-residency has end-date $rel-date;
    };

person-with-no-active-employment-is-unemployed sub rule,
    when {
        $p isa person;
        not { $e (employment_employee: $p) isa employment; };
    }, then {
        $p isa unemployed-person;
    };

residency-without-end-date-is-current sub rule,
    when {
        $res (residency_resident: $person, residency_location: $location) isa residency;
        not { $res has end-date $rel-date; };
    }, then {
        $res has is-current true;
    };

transaction-currency-is-that-of-the-country sub rule,
    when {
        $transaction isa transaction;
        $l (locates_located: $t, locates_location: $transaction-location) isa locates;
        $transaction-country isa country, has currency $currency;
    }, then {
        $transaction has currency $currency;
    };



