#
# GRAKN.AI - THE KNOWLEDGE GRAPH
# Copyright (C) 2018 Grakn Labs Ltd
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#

package(default_visibility = ["//test-integration/graql/reasoner:__subpackages__"])

filegroup(
    name = "reflexive-relation",
    srcs = ["reflexiveRelation.gql"]
)
filegroup(
    name = "reflexive-symmetric-relation",
    srcs = ["reflexiveSymmetricRelation.gql"]
)
filegroup(
    name = "type-derivation",
    srcs = ["typeDerivation.gql"]
)
filegroup(
    name = "type-derivation-with-direct",
    srcs = ["typeDerivationWithDirect.gql"]
)
filegroup(
    name = "type-derivation-relations-with-direct",
    srcs = ["typeDerivationRelationsWithDirect.gql"]
)
filegroup(
    name = "type-derivation-from-attribute",
    srcs = ["typeDerivationFromAttribute.gql"]
)
filegroup(
    name = "type-derivation-from-relations",
    srcs = ["typeDerivationFromRelations.gql"]
)
filegroup(
    name = "fresh-entity-derivation-test",
    srcs = ["freshEntityDerivation.gql"]
)
filegroup(
    name = "fresh-entity-derivation-from-relations",
    srcs = ["freshEntityDerivationFromRelations.gql"]
)
filegroup(
    name = "fresh-relation-derivation",
    srcs = ["freshRelationDerivation.gql"]
)
filegroup(
    name = "appending-rps-test",
    srcs = ["appendingRPs.gql"]
)
filegroup(
    name = "resource-attachment",
    srcs = ["resourceAttachment.gql"]
)
filegroup(
    name = "resources-as-role-players",
    srcs = ["resourcesAsRolePlayers.gql"]
)
filegroup(
    name = "test-set7",
    srcs = ["testSet7.gql"]
)
filegroup(
    name = "test-set8",
    srcs = ["testSet8.gql"]
)
filegroup(
    name = "test-set9",
    srcs = ["testSet9.gql"]
)
filegroup(
    name = "test-set10",
    srcs = ["testSet10.gql"]
)
filegroup(
    name = "test-set11",
    srcs = ["testSet11.gql"]
)
filegroup(
    name = "test-set12",
    srcs = ["testSet12.gql"]
)
filegroup(
    name = "test-set13",
    srcs = ["testSet13.gql"]
)
filegroup(
    name = "test-set19",
    srcs = ["testSet19.gql"]
)
filegroup(
    name = "test-set19-recursive",
    srcs = ["testSet19-recursive.gql"]
)
filegroup(
    name = "test-set20",
    srcs = ["testSet20.gql"]
)
filegroup(
    name = "test-set21",
    srcs = ["testSet21.gql"]
)
filegroup(
    name = "test-set22",
    srcs = ["testSet22.gql"]
)
filegroup(
    name = "test-set23",
    srcs = ["testSet23.gql"]
)
filegroup(
    name = "test-set24",
    srcs = ["testSet24.gql"]
)
filegroup(
    name = "test-set25",
    srcs = ["testSet25.gql"]
)
filegroup(
    name = "test-set26",
    srcs = ["testSet26.gql"]
)
filegroup(
    name = "test-set27",
    srcs = ["testSet27.gql"]
)
filegroup(
    name = "test-set28",
    srcs = ["testSet28.gql"]
)
filegroup(
    name = "test-set28b",
    srcs = ["testSet28b.gql"]
)
filegroup(
    name = "test-set29",
    srcs = ["testSet29.gql"]
)
filegroup(
    name = "test-set30",
    srcs = ["testSet30.gql"]
)
filegroup(
    name = "resource-ownership",
    srcs = ["resourceOwnership.gql"]
)
filegroup(
    name = "resource-hierarchy",
    srcs = ["resourceHierarchy.gql"]
)
filegroup(
    name = "resource-directionality",
    srcs = ["resourceDirectionality.gql"]
)